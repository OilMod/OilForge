apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"

minecraft {
    mappings channel: "snapshot", version: config.mappings
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
}

dependencies {
    minecraft "net.minecraftforge:forge:${config.mc_version}-${config.forge_version}"
    compile "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:deobf"
}

version = "1.0" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
isDepForge = true;



mixinconnector =  "org.oilmod.oilforge.mixin.transformers.MixinConnector"

def delayedSetup() {
    dependencies {
        compileJars project(":lib:OilMod-API")
        compileJars project(":lib:minherit")

        compileOnly project(":oilforgemodloader")
        compileJars project(":forgeshared")
        compile "com.electronwill.night-config:json:3.6.0" //remove after figuring out big jar
        compileOnly "org.spongepowered:mixin:0.8-SNAPSHOT"
    }
}

mixin {
    add sourceSets.main, "main.refmap.json"
    //add sourceSets.another, "another.refmap.json"
}

minecraft {

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory rootProject.file("run")
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            mods {
                oilforge {
                    source project(":oilforge").sourceSets.main
                }
            }
        }


        server {
            workingDirectory rootProject.file("run")
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            mods {
                oilforge {
                    source project(":oilforge").sourceSets.main
                }
            }
        }

        data {
            workingDirectory rootProject.file('run')


            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                oilforge {
                    source project(":oilforge").sourceSets.main
                }
            }
        }
    }
}



def setupForge() {

}